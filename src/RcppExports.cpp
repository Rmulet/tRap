// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// R_affinity_sum_multi
Rcpp::NumericVector R_affinity_sum_multi(Rcpp::NumericVector pwm, int motiflength, std::vector< std::string > sequence, Rcpp::IntegerVector seqlength, double Rmax, double lambda, int bothstrands);
RcppExport SEXP tRap_R_affinity_sum_multi(SEXP pwmSEXP, SEXP motiflengthSEXP, SEXP sequenceSEXP, SEXP seqlengthSEXP, SEXP RmaxSEXP, SEXP lambdaSEXP, SEXP bothstrandsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pwm(pwmSEXP );
        Rcpp::traits::input_parameter< int >::type motiflength(motiflengthSEXP );
        Rcpp::traits::input_parameter< std::vector< std::string > >::type sequence(sequenceSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seqlength(seqlengthSEXP );
        Rcpp::traits::input_parameter< double >::type Rmax(RmaxSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< int >::type bothstrands(bothstrandsSEXP );
        Rcpp::NumericVector __result = R_affinity_sum_multi(pwm, motiflength, sequence, seqlength, Rmax, lambda, bothstrands);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// R_affinity_multi
Rcpp::List R_affinity_multi(Rcpp::NumericVector pwm, int motiflength, std::vector< std::string > sequence, Rcpp::IntegerVector seqlength, double Rmax, double lambda, int bothstrands);
RcppExport SEXP tRap_R_affinity_multi(SEXP pwmSEXP, SEXP motiflengthSEXP, SEXP sequenceSEXP, SEXP seqlengthSEXP, SEXP RmaxSEXP, SEXP lambdaSEXP, SEXP bothstrandsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type pwm(pwmSEXP );
        Rcpp::traits::input_parameter< int >::type motiflength(motiflengthSEXP );
        Rcpp::traits::input_parameter< std::vector< std::string > >::type sequence(sequenceSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seqlength(seqlengthSEXP );
        Rcpp::traits::input_parameter< double >::type Rmax(RmaxSEXP );
        Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP );
        Rcpp::traits::input_parameter< int >::type bothstrands(bothstrandsSEXP );
        Rcpp::List __result = R_affinity_multi(pwm, motiflength, sequence, seqlength, Rmax, lambda, bothstrands);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
